knitr::opts_chunk$set(echo = TRUE)
# LIBRARY =====
library(dplyr)
library(tidyr)
library(reshape2)
# IMPORT DATA =====
vol.bunny.df <- read.table("Bunny_Output_TEST_headers.csv", header=TRUE, sep=",")
vol.walnut.df <- read.table("Walnut_Output_TEST_headers.csv", header=TRUE, sep=",")
vol.lettuce.df <- read.table("Lettuce_Output_TEST_headers.csv", header=TRUE, sep=",")
vol.cardinal.df <- read.table("Cardinal_Output_TEST_headers.csv", header=TRUE, sep=",")
vol.mouth.df <- read.table("Mouth_Output_TEST_headers.csv", header=TRUE, sep=",")
vol.hen.df <- read.table("HenPlume_Output_TEST_headers.csv", header=TRUE, sep=",")
chars.potholes <- data.frame("pothole" = c("Bunny", "Walnut", "Lettuce", "Cardinal", "Hen", "Mouth"),
"ca.sa.ratio" = c(7.5, 3.7, 6.3, 8.7, 6.9, 10.2),
"depth.max" = c(1, 0.7, 0.8, 0.8, 0.6, 0.4),
"area.max" = c(5.35, 2.6, 2.11, 1.49, 0.51, 0.94),
"vol.max" = c(29356, 11838, 8274, 5832, 1766, 1136),
"drainage.status" = c("high", "medium", "low", "medium", "none", "none"),
"pothole.cover" = c("CS", "CS", "CS", "CS", "CS", "R"),
"field.cover" = c(rep("CS")),
"tillage" = c(rep("conventional")))
# FNCTIONS ====
quad.func <- function(a,b,c,d){
if(delta(a,b,c,d) > 0){ # first case D>0
x_1 = (-b+sqrt(delta(a,b,c,d)))/(2*a)
x_2 = (-b-sqrt(delta(a,b,c,d)))/(2*a)
result = c(x_1,x_2)
}
else if(delta(a,b,c,d) == 0){ # second case D=0
x = -b/(2*a)
}
else {"There are no real roots."} # third case D<0
}
# Constructing delta
delta<-function(a,b,c,d){
b^2-4*a*(c-d)
}
calc.depth.data <- function(data.df, id) {
depth.data.df <- data.frame(matrix(ncol=43, nrow=9131))
colnames(depth.data.df) <- colnames(data.df)
depth.data.df[ , c(1:4)] <- data.df[ , c(1:4)]
if (id == 1){
col = "steelblue"
nm = "bunny"
mx.d <- chars.potholes$depth.max[id]
# check for range of volume, converts to depth differently
# based on regression curves developed by Alex Martin
# quadratic portion coefficients, low order to high order
coeff.quad.v <- c(651.08, -7364.1, 35202)
coeff.quad.A <- c(-515.92, 37752, 25940)
# linear portion coefficients
coeff.lin.v <- c(2667)
coeff.lin.A <- c()
x = 1
y = 5
while (x <= length(data.df$Gregorian)) {
y = 5
while (y<=43) {
if (data.df[x , y] <= coeff.lin.v[1]*0.1) {
depth.data.df[x , y] <- data.df[x ,y] / coeff.lin.v[1]
} else {
roots <- quad.func(coeff.quad.v[3], coeff.quad.v[2],coeff.quad.v[1], data.df[x, y])
depth.data.df[x , y] <- roots[1]
if (roots[1] > chars.potholes$depth.max[id]) depth.data.df[x,y] <- chars.potholes$depth.max[id]
}
y <- y +1
}
x<-x+1
}
} else if (id == 2) {
col="tan4"
nm = "walnut"
mx.d <- chars.potholes$depth.max[id]
# quadratic portion coefficients, low order to high order
coeff.quad.v <- c(-203.57, 1300.2, 19238)
coeff.quad.A <- c(-699.71, 49183, -12568)
# linear portion coefficients
coeff.lin.v <- c(1188)
coeff.lin.A <- c()
x = 1
y = 5
while (x <= length(data.df$Gregorian)) {
y = 5
while (y<=43) {
if (data.df[x , y] <= coeff.lin.v[1]*0.1) {
depth.data.df[x , y] <- data.df[x ,y] / coeff.lin.v[1]
} else {
roots <- quad.func(coeff.quad.v[3], coeff.quad.v[2],coeff.quad.v[1], data.df[x, y])
depth.data.df[x , y] <- roots[1]
}
y <- y +1
}
x<-x+1
}
}else if (id == 3) {
col="seagreen"
nm = "lettuce"
mx.d <- chars.potholes$depth.max[id]
# quadratic portion coefficients, low order to high order
coeff.quad.v <- c(211.93, -3451.1, 17871)
coeff.quad.A <- c(-1198.1, 20716, 20544)
# linear portion coefficients
coeff.lin.v <- c(455)
coeff.lin.A <- c()
x = 1
y = 5
while (x <= length(data.df$Gregorian)) {
y = 5
while (y<=43) {
if (data.df[x , y] <= coeff.lin.v[1]*0.1) {
depth.data.df[x , y] <- data.df[x ,y] / coeff.lin.v[1]
} else {
roots <- quad.func(coeff.quad.v[3], coeff.quad.v[2],coeff.quad.v[1], data.df[x, y])
depth.data.df[x , y] <- roots[1]
}
y <- y +1
}
x<-x+1
}
}else if (id == 4) {
col="firebrick3"
nm = "cardinal"
mx.d <- chars.potholes$depth.max[id]
# quadratic portion coefficients, low order to high order
coeff.quad.v <- c(-17.083, 980.2, 14492)
coeff.quad.A <- c(-716.91, 32988, -14302)
# linear portion coefficients
coeff.lin.v <- c(298.2)
coeff.lin.A <- c()
x = 1
y = 5
while (x <= length(data.df$Gregorian)) {
y = 5
while (y<=43) {
if (data.df[x , y] <= coeff.lin.v[1]*0.1) {
depth.data.df[x , y] <- data.df[x ,y] / coeff.lin.v[1]
} else {
roots <- quad.func(coeff.quad.v[3], coeff.quad.v[2],coeff.quad.v[1], data.df[x, y])
depth.data.df[x , y] <- roots[1]
}
y <- y +1
}
x<-x+1
}
}else if (id == 5) {
col="goldenrod"
nm = "hen"
mx.d <- chars.potholes$depth.max[id]
# quadratic portion coefficients, low order to high order
coeff.quad.v <- c(-15.96, 136.89, 4951.7)
coeff.quad.A <- c(-176.28, 14187, -8648)
# linear portion coefficients
coeff.lin.v <- c(472.5)
coeff.lin.A <- c()
x = 1
y = 5
while (x <= length(data.df$Gregorian)) {
y = 5
while (y<=43) {
if (data.df[x , y] <= coeff.lin.v[1]*0.1) {
depth.data.df[x , y] <- data.df[x ,y] / coeff.lin.v[1]
} else {
roots <- quad.func(coeff.quad.v[3], coeff.quad.v[2],coeff.quad.v[1], data.df[x, y])
depth.data.df[x , y] <- roots[1]
}
y <- y +1
}
x<-x+1
}
}else if (id == 6) {
col="mediumpurple3"
nm = "mouth"
mx.d <- chars.potholes$depth.max[id]
# quadratic portion coefficients, low order to high order
coeff.quad.v <- c(151, -3320, 20600)
coeff.quad.A <- c(-1912, 26930, 36800)
# linear portion coefficients, where d >= 0.1
coeff.lin.v <- c(250)
coeff.lin.A <- c()
x = 1
y = 5
while (x <= length(data.df$Gregorian)) {
y = 5
while (y<=43) {
if (data.df[x , y] <= coeff.lin.v[1]*0.1) {
depth.data.df[x , y] <- data.df[x ,y] / coeff.lin.v[1]
} else {
roots <- quad.func(coeff.quad.v[3], coeff.quad.v[2],coeff.quad.v[1], data.df[x, y])
depth.data.df[x , y] <- roots[1]
}
y <- y +1
}
x<-x+1
}
} else {
col = "black"
}
return(depth.data.df)
}
calc.area.data <- function(data.df, id) {
area.data.df <- data.frame(matrix(ncol=43, nrow=9131))
colnames(area.data.df) <- colnames(data.df)
area.data.df[ , c(1:4)] <- data.df[ , c(1:4)]
if (id == 1){
col = "steelblue"
nm = "bunny"
# mx.A <- chars.potholes$area.max[id]
# check for range of volume, converts to depth differently
# based on regression curves developed by Alex Martin
# quadratic portion coefficients, low order to high order
coeff.quad.v <- c(651.08, -7364.1, 35202)
coeff.quad.A <- c(-515.92, 37752, 25940)
# linear portion coefficients
coeff.lin.v <- c(2667)
coeff.lin.A <- c(35187)
x = 1
y = 5
while (x <= length(data.df$Gregorian)) {
y = 5
while (y<=43) {
if (data.df[x , y] <= 0.1) {
area.data.df[x , y] <- data.df[x ,y] * coeff.lin.A[1]
} else {
area.data.df[x , y] <- coeff.quad.A[3]*(data.df[x, y])^2 + coeff.quad.A[2]*(data.df[x, y]) +coeff.quad.A[1]
}
y <- y + 1
}
x <- x + 1
}
} else if (id == 2) {
col="tan4"
nm = "walnut"
# mx.A <- chars.potholes$area.max[id]
# quadratic portion coefficients, low order to high order
coeff.quad.v <- c(-203.57, 1300.2, 19238)
coeff.quad.A <- c(-699.71, 49183, -12568)
# linear portion coefficients
coeff.lin.v <- c(1188)
coeff.lin.A <- c(40929.1)
x = 1
y = 5
while (x <= length(data.df$Gregorian)) {
y = 5
while (y<=43) {
if (data.df[x , y] <= 0.1) {
area.data.df[x , y] <- data.df[x ,y] * coeff.lin.A[1]
} else {
area.data.df[x , y] <- coeff.quad.A[3]*(data.df[x, y])^2 + coeff.quad.A[2]*(data.df[x, y]) +coeff.quad.A[1]
}
y <- y + 1
}
x <- x + 1
}
}else if (id == 3) {
col="seagreen"
nm = "lettuce"
# mx.A <- chars.potholes$area.max[id]
# quadratic portion coefficients, low order to high order
coeff.quad.v <- c(211.93, -3451.1, 17871)
coeff.quad.A <- c(-1198.1, 20716, 20544)
# linear portion coefficients
coeff.lin.v <- c(455)
coeff.lin.A <- c(10789.4)
x = 1
y = 5
while (x <= length(data.df$Gregorian)) {
y = 5
while (y<=43) {
if (data.df[x , y] <= 0.1) {
area.data.df[x , y] <- data.df[x ,y] * coeff.lin.A[1]
} else {
area.data.df[x , y] <- coeff.quad.A[3]*(data.df[x, y])^2 + coeff.quad.A[2]*(data.df[x, y]) +coeff.quad.A[1]
}
y <- y + 1
}
x <- x + 1
}
}else if (id == 4) {
col="firebrick3"
nm = "cardinal"
# mx.A <- chars.potholes$area.max[id]
# quadratic portion coefficients, low order to high order
coeff.quad.v <- c(-17.083, 980.2, 14492)
coeff.quad.A <- c(-716.91, 32988, -14302)
# linear portion coefficients
coeff.lin.v <- c(298.2)
coeff.lin.A <- c(24388.7)
x = 1
y = 5
while (x <= length(data.df$Gregorian)) {
y = 5
while (y<=43) {
if (data.df[x , y] <= 0.1) {
area.data.df[x , y] <- data.df[x ,y] * coeff.lin.A[1]
} else {
area.data.df[x , y] <- coeff.quad.A[3]*(data.df[x, y])^2 + coeff.quad.A[2]*(data.df[x, y]) +coeff.quad.A[1]
}
y <- y + 1
}
x <- x + 1
}
}else if (id == 5) {
col="goldenrod"
nm = "hen"
# mx.A <- chars.potholes$area.max[id]
# quadratic portion coefficients, low order to high order
coeff.quad.v <- c(-15.96, 136.89, 4951.7)
coeff.quad.A <- c(-176.28, 14187, -8648)
# linear portion coefficients
coeff.lin.v <- c(472.5)
coeff.lin.A <- c(11559.4)
x = 1
y = 5
while (x <= length(data.df$Gregorian)) {
y = 5
while (y<=43) {
if (data.df[x , y] <= 0.1) {
area.data.df[x , y] <- data.df[x ,y] * coeff.lin.A[1]
} else {
area.data.df[x , y] <- coeff.quad.A[3]*(data.df[x, y])^2 + coeff.quad.A[2]*(data.df[x, y]) +coeff.quad.A[1]
}
y <- y + 1
}
x <- x + 1
}
}else if (id == 6) {
col="mediumpurple3"
nm = "mouth"
# mx.A <- chars.potholes$area.max[id]
# quadratic portion coefficients, low order to high order
coeff.quad.v <- c(151, -3320, 20600)
coeff.quad.A <- c(-1912, 26930, 36800)
# linear portion coefficients, where d <= 0.1
coeff.lin.v <- c(250)
coeff.lin.A <- c(11490)
x = 1
y = 5
while (x <= length(data.df$Gregorian)) {
y = 5
while (y<=43) {
if (data.df[x , y] <= 0.1) {
area.data.df[x , y] <- data.df[x ,y] * coeff.lin.A[1]
} else {
area.data.df[x , y] <- coeff.quad.A[3]*(data.df[x, y])^2 + coeff.quad.A[2]*(data.df[x, y]) +coeff.quad.A[1]
}
y <- y + 1
}
x <- x + 1
}
} else {
col = "black"
}
return(area.data.df)
}
# CREATE AND SAVE DEPTH DATA =====
depth.bunny.df <- calc.depth.data(vol.bunny.df, 1)
depth.walnut.df <- calc.depth.data(vol.walnut.df, 2)
depth.lettuce.df <- calc.depth.data(vol.lettuce.df, 3)
depth.cardinal.df <- calc.depth.data(vol.cardinal.df, 4)
depth.hen.df <- calc.depth.data(vol.hen.df, 5)
depth.mouth.df <- calc.depth.data(vol.mouth.df, 6)
# save csv
write.csv(depth.bunny.df, file = "depth_time_series_bunny.csv", sep = ",", col.names = TRUE)
write.csv(depth.walnut.df, file = "depth_time_series_walnut.csv", sep = ",", col.names = TRUE)
write.csv(depth.lettuce.df, file = "depth_time_series_lettuce.csv", sep = ",", col.names = TRUE)
write.csv(depth.cardinal.df, file = "depth_time_series_cardinal.csv", sep = ",", col.names = TRUE)
write.csv(depth.hen.df, file = "depth_time_series_hen.csv", sep = ",", col.names = TRUE)
write.csv(depth.mouth.df, file = "depth_time_series_mouth.csv", sep = ",", col.names = TRUE)
# CREATE AND SAVE AREA DATA =====
area.bunny.df <- calc.area.data(depth.bunny.df, 1)
area.walnut.df <- calc.area.data(depth.walnut.df, 2)
area.lettuce.df <- calc.area.data(depth.lettuce.df, 3)
area.cardinal.df <- calc.area.data(depth.cardinal.df, 4)
area.hen.df <- calc.area.data(depth.hen.df, 5)
area.mouth.df <- calc.area.data(depth.mouth.df, 6)
# save csv
write.csv(area.bunny.df, file = "area_time_series_bunny.csv", sep = ",", col.names = TRUE)
write.csv(area.walnut.df, file = "area_time_series_walnut.csv", sep = ",", col.names = TRUE)
write.csv(area.lettuce.df, file = "area_time_series_lettuce.csv", sep = ",", col.names = TRUE)
write.csv(area.cardinal.df, file = "area_time_series_cardinal.csv", sep = ",", col.names = TRUE)
write.csv(area.hen.df, file = "area_time_series_hen.csv", sep = ",", col.names = TRUE)
write.csv(area.mouth.df, file = "area_time_series_mouth.csv", sep = ",", col.names = TRUE)
