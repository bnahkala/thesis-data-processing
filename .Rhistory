Drain2RetiredNT = max(Drain2RetiredNT),
Drain3RetiredNT = max(Drain3RetiredNT),
Drain1RetiredAll = max(Drain1RetiredAll),
Drain2RetiredAll = max(Drain2RetiredAll),
Drain3RetiredAll = max(Drain3RetiredAll)
)
return(max.by.month)
}
# function originally from 'AnnAGNPS_Output.Rproj' -> data_viz_functions.R
plot.max.monthly <- function(data.df, id) {
mm <- data.df %>%
group_by(Month) %>%
summarise(Base=max(Base), RetiredAll=max(RetiredAll), ConTill =max(ConTill),
RetiredPothole=max(RetiredPothole), Drain01=max(Drain01), Drain02=max(Drain02),
Drain03=max(Drain03), PlantDate01=max(PlantDate01), PlantDate02=max(PlantDate02),
PlantDate03=max(PlantDate03), PlantDate04=max(PlantDate04), NoTill=max(NoTill),
ConTillRetired=max(ConTillRetired), NoTillRetired=max(NoTillRetired),
ConTillDrain01=max(ConTillDrain01), ConTillDrain02=max(ConTillDrain02),ConTillDrain03=max(ConTillDrain03),
CoverCrop=max(CoverCrop), BaseRetired=max(BaseRetired), Drain1Retired=max(Drain1Retired),
Drain2Retired=max(Drain2Retired), Drain3Retired=max(Drain3Retired)) %>%
melt(id="Month") %>%
as.data.frame()
if (id == 1){
col = "steelblue"
nm = "bunny"
} else if (id == 2) {
col="tan4"
nm = "walnut"
}else if (id == 3) {
col="seagreen"
nm = "lettuce"
}else if (id == 4) {
col="firebrick3"
nm = "cardinal"
}else if (id == 5) {
col="goldenrod"
nm = "hen"
}else if (id == 6) {
col="mediumpurple3"
nm = "mouth"
} else {
col = "black"
}
png(paste("median.max.monthly.plot.",nm, ".png"), width = 1200, height = 800)
# windows()
plot.all <- ggplot(mm, aes(x=Month, y=value))+
geom_bar(stat="identity", fill=col)+
facet_wrap(~variable)+
ylim(0, 7500)+
labs(
x="Month",
y="Average Monthly Maximum Volume (m^3)")
return(plot.all)
}
# DATA PREP ====
area.max.month.bunny <- find.monthly.max(area.bunny.df)
area.max.month.walnut <- find.monthly.max(area.walnut.df)
area.max.month.lettuce <- find.monthly.max(area.lettuce.df)
area.max.month.cardinal <- find.monthly.max(area.cardinal.df)
area.max.month.hen <- find.monthly.max(area.hen.df)
area.max.month.mouth <- find.monthly.max(area.mouth.df)
data.for.partitioning2 <- rbind(area.max.month.bunny, area.max.month.walnut, area.max.month.lettuce,
area.max.month.cardinal, area.max.month.hen, area.max.month.mouth)
data.for.partitioning2$Pothole <- c(rep("Bunny", 300), rep("Walnut", 300), rep("Lettuce", 300),
rep("Cardinal", 300), rep("Hen", 300), rep("Mouth", 300))
# data.for.partitioning2 <- melt(data.for.partitioning2, id=c("Year", "Month", "Pothole"))
# PARTITIONING DATA =====
# drainage matrices ====
max.data.drain0 <- data.for.partitioning2[ , c(1:2, 42, (simulation_numbers$Drain0+3))]
max.data.drain0 <- max.data.drain0 %>%
gather("variable", "value", 4:10)
max.data.drain0$scen <- factor(max.data.drain0$variable, levels = c("Drain0", "Drain0CT", "Drain0NT",
"RetiredPothole", "ConTillRetired",
"NoTillRetired", "RetiredAll"))
# max.data.drain0.filter <- max.data.drain0 %>%
#   filter(Pothole != "Mouth" & Pothole != "Hen") %>%
#   filter(variable == "Drain0" | variable == "RetiredPothole" | variable == "RetiredAll")
max.data.drain1 <- data.for.partitioning2[ , c(1:2, 42, (simulation_numbers$Drain1+3))]
max.data.drain1 <- max.data.drain1 %>%
gather("variable", "value", 4:10)
max.data.drain1$scen <- factor(max.data.drain1$variable, levels=c("Drain01", "ConTillDrain01", "Drain1NT",
"Drain1Retired", "Drain1RetiredCT",
"Drain1RetiredNT", "Drain1RetiredAll"))
max.data.drain2 <- data.for.partitioning2[ , c(1:2, 42, (simulation_numbers$Drain2+3))]
max.data.drain2 <- max.data.drain2 %>%
gather("variable", "value", 4:10)
max.data.drain2$scen <- factor(max.data.drain2$variable, levels=c("Drain02", "ConTillDrain02", "Drain2NT",
"Drain2Retired", "Drain2RetiredCT",
"Drain2RetiredNT", "Drain2RetiredAll"))
max.data.drain3 <- data.for.partitioning2[ , c(1:2, 42, (simulation_numbers$Drain3+3))]
max.data.drain3 <- max.data.drain3 %>%
gather("variable", "value", 4:10)
max.data.drain3$scen <- factor(max.data.drain3$variable, levels=c("Drain03", "ConTillDrain03", "Drain3NT",
"Drain3Retired", "Drain3RetiredCT",
"Drain3RetiredNT", "Drain3RetiredAll"))
# tillage matrices ====
max.data.CSCV <- data.for.partitioning2[ , c(1:2, 42, (simulation_numbers2$CSCV)+3)]
max.data.CSCV <- max.data.CSCV %>%
gather("variable", "value", 4:7)
max.data.CSCT <- data.for.partitioning2[ , c(1:2, 42, (simulation_numbers2$CSCT)+3)]
max.data.CSCT <- max.data.CSCT %>%
gather("variable", "value", 4:7)
max.data.CSNT <- data.for.partitioning2[ , c(1:2, 42, (simulation_numbers2$CSNT)+3)]
max.data.CSNT <- max.data.CSNT %>%
gather("variable", "value", 4:7)
max.data.RCV <- data.for.partitioning2[ , c(1:2, 42, (simulation_numbers2$RCV)+3)]
max.data.RCV <- max.data.RCV %>%
gather("variable", "value", 4:7)
max.data.RCT <- data.for.partitioning2[ , c(1:2, 42, (simulation_numbers2$RCT)+3)]
max.data.RCT <- max.data.RCT %>%
gather("variable", "value", 4:7)
max.data.RNT <- data.for.partitioning2[ , c(1:2, 42, (simulation_numbers2$RNT)+3)]
max.data.RNT <- max.data.RNT %>%
gather("variable", "value", 4:7)
max.data.RR <- data.for.partitioning2[ , c(1:2, 42, (simulation_numbers2$RR)+3)]
max.data.RR <- max.data.RR %>%
gather("variable", "value", 4:7)
# function originally from 'AnnAGNPS_Output.Rproj' -> data_partitioning.R
max.function.partitioned3 <- function(data.df, id, supp.labs, labnms) {
temp <- data.df %>%
group_by(Month, Pothole, scen) %>%
summarise(avg.max=mean(value), median.max=median(value)) #%>%
# filter(avg.max != 0)
temp$Month <- factor(temp$Month)
labs <- as.character(supp.labs)
names(labs) <- as.character(labnms)
png(filename = paste0("avg_", id, "_comparison.png"), width=800, height=500)
# windows()
plot.max <- ggplot(temp, aes(x=Month, y=avg.max, fill=Pothole))+
geom_bar(stat="identity")+
facet_grid(cols = vars(scen), rows = vars(Pothole), labeller = labeller(scen = labs))+
ylim(0, 25000)+
theme_bw(base_size = 6)+
# theme(axis.text.x = element_text(angle = 90))+
theme(strip.text.x = element_text(size = 5))+
theme(legend.position = "none")+
scale_x_discrete(breaks = c(1, 3, 5, 7, 9 ,11), labels=c("J", "M", "M", "J", "S", "N"))+
labs(
x="",
y="")+
scale_fill_brewer(palette = "Dark2", labels=c("DX-CS-CV","DX-CS-CT","DX-CS-NT","DX-R-CV","DX-R-CT","DX-R-NT","DX-R-R"))
plot.max
return(plot.max)
}
# APPLY PLOT FUNCTIONS ======
# drainage matrices ====
m1 <- max.function.partitioned3(max.data.drain0, "drain0", simulation_shortIDs$Drain0, simulation_names$Drain0)
dev.off()
# max.function.partitioned2(max.data.drain0.filter, "Simulation Comparison, No Drainage Present", "drain0_abbr", simulation_shortIDs$Drain0, simulation_names$Drain0)
# dev.off()
m2 <- max.function.partitioned3(max.data.drain1, "drain1", simulation_shortIDs$Drain1, simulation_names$Drain1)
dev.off()
m3 <- max.function.partitioned3(max.data.drain2, "drain2", simulation_shortIDs$Drain2, simulation_names$Drain2)
dev.off()
m4 <- max.function.partitioned3(max.data.drain3, "drain3", simulation_shortIDs$Drain3, simulation_names$Drain3)
dev.off()
# windows()
png(filename = "Fig3_MaxArea.png", width=190, height=190, units="mm", res=300)
arr <- ggarrange(
m1+theme(axis.text.x = element_blank()),
m2+theme(axis.text.x = element_blank(), axis.text.y = element_blank()),
m3,
m4+theme(axis.text.y = element_blank()),
labels = c("A", "B", "C", "D"),
label.x = c(-0.02, -0.02, -0.02, -0.02),
ncol = 2,
nrow = 2
)
annotate_figure(arr,
left =text_grob("Pothole Surface Area (m^2)", rot = 90),
bottom = text_grob("Month"))
dev.off()
# data frame for plots
plt.data1 <- layer_data(m1, 1)
write.csv(plt.data1, "m1.csv", sep = ",")
plt.data2 <- layer_data(m2, 1)
write.csv(plt.data2, "m2.csv", sep = ",")
plt.data3 <- layer_data(m3, 1)
write.csv(plt.data3, "m3.csv", sep = ",")
plt.data4 <- layer_data(m4, 1)
write.csv(plt.data4, "m4.csv", sep = ",")
max.function.partitioned4 <- function(data.df, id, supp.labs, labnms) {
temp <- data.df %>%
group_by(Month, Pothole, scen, common, level) %>%
summarise(avg.max=mean(value), median.max=median(value)) #%>%
# filter(avg.max != 0)
temp$Month <- factor(temp$Month)
temp$common <- factor(temp$common,levels= c("DX-CS-CV","DX-CS-CT","DX-CS-NT","DX-R-CV","DX-R-CT","DX-R-NT","DX-R-R"))
temp$level <- factor(temp$level, levels = c("D0", "D1", "D2", "D3"))
labs <- as.character(supp.labs)
names(labs) <- as.character(labnms)
png(filename = paste0("avg_", id, "_comparison.png"), width=800, height=500)
# windows()
plot.max <- ggplot(temp, aes(x=Month, y=avg.max, fill=level))+
geom_bar(stat="identity", position="identity", color="black", size=0.15, aes(alpha=level))+
scale_alpha_manual(values=c(0, 1, 1, 1))+
facet_grid(cols = vars(common), rows = vars(Pothole), labeller = labeller(common = labs))+
ylim(0, 25000)+
theme_bw(base_size = 10)+
# theme(axis.text.x = element_text(angle = 90))+
theme(strip.text = element_text(size = 10))+
theme(legend.position = "top")+
scale_x_discrete(breaks = c(1, 3, 5, 7, 9 ,11), labels=c("J", "M", "M", "J", "S", "N"))+
labs(
x="Month",
y="Pothole Surface Area (m^2)")+
scale_fill_brewer(palette = "RdBu")+
# scale_fill_manual(values=c("darkorange2", "tan1", "seagreen3", "royalblue4"))+
theme(legend.title = element_blank())
plot.max
return(plot.max)
}
# max.data.drain <- rbind(max.data.drain0, max.data.drain1, max.data.drain2, max.data.drain3)
# max.data.drain$level <- c(rep("D0", 12600), rep("D1", 12600), rep("D2", 12600), rep("D3", 12600))
# max.data.drain$common <- c(rep(c(rep("DX-CS-CV", 1800), rep("DX-CS-CT", 1800),rep("DX-CS-NT", 1800),rep("DX-R-CV", 1800),rep("DX-R-CT", 1800),rep("DX-R-NT", 1800),rep("DX-R-R", 1800)), 4))
# labs_all <- c("DX-CS-CV","DX-CS-CT","DX-CS-NT","DX-R-CV","DX-R-CT","DX-R-NT","DX-R-R")
m5 <- max.function.partitioned4(max.data.drain, "drain", labs_all, labs_all)
dev.off()
png(filename = "Fig3_MaxArea.png", width=190, height=190, units="mm", res=300)
m5
dev.off()
m5
max.function.partitioned4 <- function(data.df, id, supp.labs, labnms) {
temp <- data.df %>%
group_by(Month, Pothole, scen, common, level) %>%
summarise(avg.max=mean(value), median.max=median(value)) #%>%
# filter(avg.max != 0)
temp$Month <- factor(temp$Month)
temp$common <- factor(temp$common,levels= c("DX-CS-CV","DX-CS-CT","DX-CS-NT","DX-R-CV","DX-R-CT","DX-R-NT","DX-R-R"))
temp$level <- factor(temp$level, levels = c("D0", "D1", "D2", "D3"))
labs <- as.character(supp.labs)
names(labs) <- as.character(labnms)
png(filename = paste0("avg_", id, "_comparison.png"), width=800, height=500)
# windows()
plot.max <- ggplot(temp, aes(x=Month, y=avg.max, fill=level))+
geom_bar(stat="identity", position="identity", color="black", size=0.15, aes(alpha=level))+
scale_alpha_manual(values=c(0, 1, 1, 1))+
facet_grid(cols = vars(common), rows = vars(Pothole), labeller = labeller(common = labs))+
ylim(0, 25000)+
theme_bw(base_size = 11)+
# theme(axis.text.x = element_text(angle = 90))+
theme(strip.text = element_text(size = 10))+
theme(legend.position = "top")+
scale_x_discrete(breaks = c(1, 3, 5, 7, 9 ,11), labels=c("J", "M", "M", "J", "S", "N"))+
labs(
x="Month",
y="Pothole Surface Area (m^2)")+
scale_fill_brewer(palette = "RdBu")+
# scale_fill_manual(values=c("darkorange2", "tan1", "seagreen3", "royalblue4"))+
theme(legend.title = element_blank())
plot.max
return(plot.max)
}
# max.data.drain <- rbind(max.data.drain0, max.data.drain1, max.data.drain2, max.data.drain3)
# max.data.drain$level <- c(rep("D0", 12600), rep("D1", 12600), rep("D2", 12600), rep("D3", 12600))
# max.data.drain$common <- c(rep(c(rep("DX-CS-CV", 1800), rep("DX-CS-CT", 1800),rep("DX-CS-NT", 1800),rep("DX-R-CV", 1800),rep("DX-R-CT", 1800),rep("DX-R-NT", 1800),rep("DX-R-R", 1800)), 4))
# labs_all <- c("DX-CS-CV","DX-CS-CT","DX-CS-NT","DX-R-CV","DX-R-CT","DX-R-NT","DX-R-R")
m5 <- max.function.partitioned4(max.data.drain, "drain", labs_all, labs_all)
dev.off()
png(filename = "Fig3_MaxArea.png", width=190, height=190, units="mm", res=300)
m5
dev.off()
m5
View(hydro_data)
View(hydro_data_long)
knitr::opts_chunk$set(echo = F)
# AUTHOR: BRADY NAHKALA
# LAST REVISED: 03 SEP 2020
# PURPOSE: CREATE FIGURES FOR AWM TECH MEMO PUBLICATION
# 03.23.2020 - updated with new Cardinal and mouth data
#
#
# =======================
library(ggplot2)
library(dplyr)
library(RColorBrewer)
library(gridExtra)
library(tidyr)
library(ggpubr)
library(ggeffects)
# DATA ==================
stats_data <- as.data.frame(read.csv("Stats_Data_All_Potholes_Methods.csv", header=T, sep = ","))
stats_data_course <- as.data.frame(read.csv("Stats_Data_Course_All.csv", header=T, sep = ","))
head(stats_data)
head(stats_data_course)
nms <- c("Bunny", "Walnut", "Lettuce", "Cardinal", "Hen", "Mouth")
cols <- c("steelblue", "tan4", "seagreen", "firebrick3", "goldenrod", "mediumpurple3")
# FIGURE 3 ==============
stats_data_filter <- stats_data %>%
filter(Method == 3)
stats_data_long <- stats_data_filter[, c(1, 7:11)] %>%
gather(key="Statistic", value = "result", 3:6) %>%
filter(Statistic != "PBIAS")
ylim.p <- c(-0.2, 1.1)
ylim.s <- c(-50, 150)
b <- diff(ylim.p)/diff(ylim.s)
a <- b*(ylim.p[1]-ylim.s[1])
txtsize <- 9
fig3a <- ggplot(stats_data_long, aes(x=Infiltration, y=result, color=Pothole, linetype=Statistic))+
geom_line(size=0.75)+
scale_color_manual(breaks=nms, values=cols)+
geom_hline(aes(yintercept=1))+
geom_hline(aes(yintercept=0),linetype="longdash")+
ylab("NSE, RSR, R^2")+
xlab("")+
theme(text = element_text(size = txtsize))+
theme_bw()+
guides(col=guide_legend(nrow = 3, title.position="top"), linetype=guide_legend(nrow=3, title.position="top"))
fig3b <- ggplot(stats_data_filter)+
geom_line(aes(x=Infiltration, y=PBIAS, color=Pothole), linetype="solid", size=0.75)+
scale_color_manual(breaks=nms, values=cols)+
geom_hline(aes(yintercept=0),linetype="solid")+
ylab("PBIAS")+
xlab("Infiltration (mm/d)")+
theme(text = element_text(size = txtsize))+
theme_bw()
png("Fig3_Calibration.png", width=90, height=180, units="mm", res=200)
# windows()
ggarrange(fig3a, fig3b, ncol=1, common.legend = T, legend = "top")
dev.off()
ggarrange(fig3a, fig3b, ncol=1, common.legend = T, legend = "top")
# windows()
Fig5_hydrograph
# DATA ==================
# data comes from Cardinal
hydro_data <- as.data.frame(read.csv("hydrograph_data.csv", header=T, sep = ","))
head(hydro_data)
hydro_data_long <- hydro_data %>%
gather(key="Source", value = "Volume", 2:5)
head(hydro_data_long)
Fig5_hydrograph <- ggplot(hydro_data_long, aes(x=as.Date(Date, "%m/%d/%y"), y=Volume, group=Source, color=Source))+
geom_line(size=0.5, aes(linetype=Source))+
scale_linetype_manual(
name="Data Source",
values = c("dotdash", "longdash", "solid", "dashed"),
labels=c("LiDAR-dV","LiDAR-SA","Monitoring Data", "NAIP")
)+
labs(
x = "Date",
y="Flooded Volume (m^3)"
)+
theme(text = element_text(size=9))+
theme_bw()+
theme(legend.position = c(0.75, 0.75), legend.text = element_text(size=7))
# guides(linetype=guide_legend(nrow = 2, title.position=c(0.75, 0.75)))
# windows()
Fig5_hydrograph
png(filename = "Fig05_Hydrograph.png", width=90, height=90, units="mm", res=200)
Fig5_hydrograph
dev.off()
# DATA ==================
# data comes from Cardinal
hydro_data <- as.data.frame(read.csv("hydrograph_data.csv", header=T, sep = ","))
head(hydro_data)
hydro_data_long <- hydro_data %>%
gather(key="Source", value = "Volume", 2:5)
head(hydro_data_long)
Fig5_hydrograph <- ggplot(hydro_data_long, aes(x=as.Date(Date, "%m/%d/%y"), y=Volume, color=Source))+
geom_line(size=0.5, aes(linetype=Source))+
scale_linetype_manual(
name="Data Source",
values = c("dotdash", "longdash", "solid", "dashed"),
labels=c("LiDAR-dV","LiDAR-SA","Monitoring Data", "NAIP")
)+
labs(
x = "Date",
y="Flooded Volume (m^3)"
)+
theme(text = element_text(size=9))+
theme_bw()+
theme(legend.position = c(0.75, 0.75), legend.text = element_text(size=7))
# guides(linetype=guide_legend(nrow = 2, title.position=c(0.75, 0.75)))
# windows()
Fig5_hydrograph
png(filename = "Fig05_Hydrograph.png", width=90, height=90, units="mm", res=200)
Fig5_hydrograph
dev.off()
# DATA ==================
# data comes from Cardinal
hydro_data <- as.data.frame(read.csv("hydrograph_data.csv", header=T, sep = ","))
head(hydro_data)
hydro_data_long <- hydro_data %>%
gather(key="Source", value = "Volume", 2:5)
head(hydro_data_long)
Fig5_hydrograph <- ggplot(hydro_data_long, aes(x=as.Date(Date, "%m/%d/%y"), y=Volume, color=Source))+
geom_line(size=0.5, aes(linetype=Source))+
scale_color_manual(
name="Data Source",
values = c("darkred", "green", "black", "orange"),
labels=c("LiDAR-dV","LiDAR-SA","Monitoring Data", "NAIP")
)+
labs(
x = "Date",
y="Flooded Volume (m^3)"
)+
theme(text = element_text(size=9))+
theme_bw()+
theme(legend.position = c(0.75, 0.75), legend.text = element_text(size=7))
# guides(linetype=guide_legend(nrow = 2, title.position=c(0.75, 0.75)))
# windows()
Fig5_hydrograph
png(filename = "Fig05_Hydrograph.png", width=90, height=90, units="mm", res=200)
Fig5_hydrograph
dev.off()
# DATA ==================
# data comes from Cardinal
hydro_data <- as.data.frame(read.csv("hydrograph_data.csv", header=T, sep = ","))
head(hydro_data)
hydro_data_long <- hydro_data %>%
gather(key="Source", value = "Volume", 2:5)
head(hydro_data_long)
Fig5_hydrograph <- ggplot(hydro_data_long, aes(x=as.Date(Date, "%m/%d/%y"), y=Volume, color=Source))+
geom_line(size=0.5)+
scale_color_manual(
name="Data Source",
values = c("darkred", "green", "black", "orange"),
labels=c("LiDAR-dV","LiDAR-SA","Monitoring Data", "NAIP")
)+
labs(
x = "Date",
y="Flooded Volume (m^3)"
)+
theme(text = element_text(size=9))+
theme_bw()+
theme(legend.position = c(0.75, 0.75), legend.text = element_text(size=7))
# guides(linetype=guide_legend(nrow = 2, title.position=c(0.75, 0.75)))
# windows()
Fig5_hydrograph
png(filename = "Fig05_Hydrograph.png", width=90, height=90, units="mm", res=200)
Fig5_hydrograph
dev.off()
# DATA ==================
# data comes from Cardinal
hydro_data <- as.data.frame(read.csv("hydrograph_data.csv", header=T, sep = ","))
head(hydro_data)
hydro_data_long <- hydro_data %>%
gather(key="Source", value = "Volume", 2:5)
head(hydro_data_long)
Fig5_hydrograph <- ggplot(hydro_data_long, aes(x=as.Date(Date, "%m/%d/%y"), y=Volume, color=Source))+
geom_line(size=0.5)+
scale_color_manual(
name="Data Source",
values = cols,
labels=c("LiDAR-dV","LiDAR-SA","Monitoring Data", "NAIP")
)+
labs(
x = "Date",
y="Flooded Volume (m^3)"
)+
theme(text = element_text(size=9))+
theme_bw()+
theme(legend.position = c(0.75, 0.75), legend.text = element_text(size=7))
# guides(linetype=guide_legend(nrow = 2, title.position=c(0.75, 0.75)))
# windows()
Fig5_hydrograph
png(filename = "Fig05_Hydrograph.png", width=90, height=90, units="mm", res=200)
Fig5_hydrograph
dev.off()
# DATA ==================
# data comes from Cardinal
hydro_data <- as.data.frame(read.csv("hydrograph_data.csv", header=T, sep = ","))
head(hydro_data)
hydro_data_long <- hydro_data %>%
gather(key="Source", value = "Volume", 2:5)
head(hydro_data_long)
Fig5_hydrograph <- ggplot(hydro_data_long, aes(x=as.Date(Date, "%m/%d/%y"), y=Volume, color=Source))+
geom_line(size=0.5)+
scale_color_manual(
name="Data Source",
values = c(cols[1], cols[2], "black", cols[3]),
labels=c("LiDAR-dV","LiDAR-SA","Monitoring Data", "NAIP")
)+
labs(
x = "Date",
y="Flooded Volume (m^3)"
)+
theme(text = element_text(size=9))+
theme_bw()+
theme(legend.position = c(0.75, 0.75), legend.text = element_text(size=7))
# guides(linetype=guide_legend(nrow = 2, title.position=c(0.75, 0.75)))
# windows()
Fig5_hydrograph
png(filename = "Fig05_Hydrograph.png", width=90, height=90, units="mm", res=200)
Fig5_hydrograph
dev.off()
# DATA ==================
# data comes from Cardinal
hydro_data <- as.data.frame(read.csv("hydrograph_data.csv", header=T, sep = ","))
head(hydro_data)
hydro_data_long <- hydro_data %>%
gather(key="Source", value = "Volume", 2:5)
head(hydro_data_long)
Fig5_hydrograph <- ggplot(hydro_data_long, aes(x=as.Date(Date, "%m/%d/%y"), y=Volume, color=Source))+
geom_line(size=0.5)+
scale_color_manual(
name="Data Source",
values = c(cols[1], cols[2], "black", cols[4]),
labels=c("LiDAR-dV","LiDAR-SA","Monitoring Data", "NAIP")
)+
labs(
x = "Date",
y="Flooded Volume (m^3)"
)+
theme(text = element_text(size=9))+
theme_bw()+
theme(legend.position = c(0.75, 0.75), legend.text = element_text(size=7))
# guides(linetype=guide_legend(nrow = 2, title.position=c(0.75, 0.75)))
# windows()
Fig5_hydrograph
png(filename = "Fig05_Hydrograph.png", width=90, height=90, units="mm", res=200)
Fig5_hydrograph
dev.off()
